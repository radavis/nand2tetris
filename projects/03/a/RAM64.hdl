// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // address MSB selects RAM8
    // address LSB selects the Register
    DMux8Way(
      in = load,
      sel = address[3..5],
      a = selR0,
      b = selR1,
      c = selR2,
      d = selR3,
      e = selR4,
      f = selR5,
      g = selR6,
      h = selR7
    );

    RAM8(in = in, load = selR0, address = address[0..2], out = r0);
    RAM8(in = in, load = selR1, address = address[0..2], out = r1);
    RAM8(in = in, load = selR2, address = address[0..2], out = r2);
    RAM8(in = in, load = selR3, address = address[0..2], out = r3);
    RAM8(in = in, load = selR4, address = address[0..2], out = r4);
    RAM8(in = in, load = selR5, address = address[0..2], out = r5);
    RAM8(in = in, load = selR6, address = address[0..2], out = r6);
    RAM8(in = in, load = selR7, address = address[0..2], out = r7);

    Mux8Way16(
      a = r0,
      b = r1,
      c = r2,
      d = r3,
      e = r4,
      f = r5,
      g = r6,
      h = r7,
      sel = address[3..5],
      out = out
    );
}
